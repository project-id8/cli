name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (without v prefix)"
        required: true
        type: string

jobs:
  verify:
    name: Verify Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Get version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Check versions match
        run: |
          CURRENT_VERSION=$(npx fork-version --inspect-version)
          if [[ "v${VERSION}" != "v${CURRENT_VERSION}" ]]; then
            echo "Version mismatch: tag v${VERSION} != CLI version v${CURRENT_VERSION}"
            exit 1
          fi

  build:
    name: Build Binaries
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: "2.1.7"

      - name: Compile for all platforms
        run: |
          mkdir -p dist

          # Compile for macOS (Apple Silicon)
          deno compile --allow-read --allow-write --allow-env --allow-net \
            --target aarch64-apple-darwin \
            --output dist/id8-darwin-arm64 main.ts

          # Compile for macOS (Intel)
          deno compile --allow-read --allow-write --allow-env --allow-net \
            --target x86_64-apple-darwin \
            --output dist/id8-darwin-amd64 main.ts

          # Compile for Linux (x86_64)
          deno compile --allow-read --allow-write --allow-env --allow-net \
            --target x86_64-unknown-linux-gnu \
            --output dist/id8-linux-amd64 main.ts

          # Compile for Linux (ARM64)
          deno compile --allow-read --allow-write --allow-env --allow-net \
            --target aarch64-unknown-linux-gnu \
            --output dist/id8-linux-arm64 main.ts

      - name: Create archives and checksums
        run: |
          mkdir -p releases
          cd dist

          for binary in id8-*; do
            tar czf "../releases/${binary}.tar.gz" "${binary}" ../LICENSE ../README.md
          done

          cd ../releases
          sha256sum *.tar.gz > checksums.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            releases/*.tar.gz
            releases/checksums.txt

  changelog:
    name: Generate Changelog
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Generate changelog
        env:
          VERSION: ${{ needs.verify.outputs.version }}
        run: |
          npx fork-version \
            --current-version "${VERSION}" \
            --skip-bump \
            --skip-commit \
            --skip-tag \
            --changelog changelog.md \
            --changelog-all

      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: changelog.md

  release:
    name: Create Release
    needs: [verify, build, changelog]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          mv artifacts/release-artifacts/* release/
          mv artifacts/changelog/changelog.md release/

          # Add checksums to changelog
          echo -e "\n## SHA256 Checksums\n\`\`\`" >> release/changelog.md
          cat release/checksums.txt >> release/changelog.md
          echo "\`\`\`" >> release/changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.tar.gz
            release/checksums.txt
          body_path: release/changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-formula:
    name: Update Homebrew Formula
    needs: [verify, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: artifacts

      - name: Update formula
        env:
          VERSION: ${{ needs.verify.outputs.version }}
        run: |
          # Extract checksums for each platform
          ARM64_DARWIN=$(grep "id8-darwin-arm64.tar.gz" artifacts/checksums.txt | cut -d' ' -f1)
          AMD64_DARWIN=$(grep "id8-darwin-amd64.tar.gz" artifacts/checksums.txt | cut -d' ' -f1)
          AMD64_LINUX=$(grep "id8-linux-amd64.tar.gz" artifacts/checksums.txt | cut -d' ' -f1)
          ARM64_LINUX=$(grep "id8-linux-arm64.tar.gz" artifacts/checksums.txt | cut -d' ' -f1)

          # Update the formula file
          sed -i "s/version \".*\"/version \"${VERSION}\"/" homebrew/id8.rb
          sed -i "s/sha256 \".*\" # arm64_darwin/sha256 \"${ARM64_DARWIN}\" # arm64_darwin/" homebrew/id8.rb
          sed -i "s/sha256 \".*\" # amd64_darwin/sha256 \"${AMD64_DARWIN}\" # amd64_darwin/" homebrew/id8.rb
          sed -i "s/sha256 \".*\" # amd64_linux/sha256 \"${AMD64_LINUX}\" # amd64_linux/" homebrew/id8.rb
          sed -i "s/sha256 \".*\" # arm64_linux/sha256 \"${ARM64_LINUX}\" # arm64_linux/" homebrew/id8.rb

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Verify formula
        run: |
          brew tap id8/cli ./homebrew
          brew audit --strict homebrew/id8.rb

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add homebrew/id8.rb
          git commit -m "chore: update homebrew formula for v${VERSION}"
          git push
